import { expect } from 'chai';

import { <%= name %>FieldRules, validate<%= Name %> } from './<%= Name %>.values';

let values;

function fillValues() {
  values = {};
}

describe('<%= [FeatureName.split('/').join('::'), 'Form'].filter(Boolean).join('::') %>::<%= Name %>::values::<%= name %>FieldRules()', function() {
  beforeEach(fillValues);

  it('does not throw in case of unknown fieldName', function() {
    expect(() => <%= name %>FieldRules({}, 'unknown field')).not.to.throw(Error);
  });

  it('returns the same object if changed field is unknown', function() {
    expect(<%= name %>FieldRules(values, 'unknown field')).to.be.equal(values);
  });
});

describe('Component::<%= Name %>::values::validate<%= Name %>()', function() {
  beforeEach(fillValues);

  it('returns `null` for every field in case of valid values', function() {
    expect(validate<%= Name %>(values)).to.be.deep.equal(null);
  });
});
