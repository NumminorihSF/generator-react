import * as React from 'react';
import { expect } from 'chai';
import Enzyme, { shallow } from 'enzyme';
import Adapter from 'enzyme-adapter-react-16';

import { <%= Name %>Controller } from './<%= Name %>.controller';
import { <%= Name %>View } from './<%= Name %>.view';

Enzyme.configure({ adapter: new Adapter() });

describe('<%= [FeatureName.split('/').join('::'), 'Page'].filter(Boolean).join('::') %>::<%= Name %>::controller', function() {
  let props;

  beforeEach(function() {
    props = {};
  });

  function renderDoc(override = {}) {
    return shallow(<<%= Name %>Controller {...props} {...override} />);
  }

  it('does not throw an error on render', function() {
    expect(renderDoc).not.to.throw(Error);
  });

  it('renders <%= Name %>View only', function() {
    const doc = renderDoc();

    expect(doc.is(<%= Name %>View)).to.be.equal(true);
  });

  it('does not pass any property with `handle` prefix into <%= Name %>View', function() {
    const doc = renderDoc();

    expect(Object.keys(doc.props()).filter(key => /^handle[A-Z]/.test(key)).length).to.be.equal(0);
  });
});
